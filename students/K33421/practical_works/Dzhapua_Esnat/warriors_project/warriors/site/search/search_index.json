{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Warriors project Esnat Dzhapua","title":"Home"},{"location":"endpoints/endpoint1/","text":"\u0415\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043a\u0438\u043b\u043e\u0432 views.py class SkillCreateView(APIView): def post(self, request): skill = request.data.get(\"skill\") serializer = SkillCreateSerializer(data=skill) if serializer.is_valid(raise_exception=True): skill_saved = serializer.save() return Response({\"Success\": \"Skill '{}' created succesfully.\".format(skill_saved.title)}) serializators.py class SkillCreateSerializer(serializers.Serializer): title = serializers.CharField(max_length=120) def create(self, validated_data): skill = Skill(**validated_data) skill.save() return Skill(**validated_data) urls.py from django.urls import path from .views import * urlpatterns = [ ... path('skill/', SkillAPIView.as_view()), path('skill/create/', SkillCreateView.as_view()), ... ]","title":"endpoint 1"},{"location":"endpoints/endpoint1/#_1","text":"views.py class SkillCreateView(APIView): def post(self, request): skill = request.data.get(\"skill\") serializer = SkillCreateSerializer(data=skill) if serializer.is_valid(raise_exception=True): skill_saved = serializer.save() return Response({\"Success\": \"Skill '{}' created succesfully.\".format(skill_saved.title)}) serializators.py class SkillCreateSerializer(serializers.Serializer): title = serializers.CharField(max_length=120) def create(self, validated_data): skill = Skill(**validated_data) skill.save() return Skill(**validated_data) urls.py from django.urls import path from .views import * urlpatterns = [ ... path('skill/', SkillAPIView.as_view()), path('skill/create/', SkillCreateView.as_view()), ... ]","title":"\u0415\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043a\u0438\u043b\u043e\u0432"},{"location":"endpoints/endpoint2/","text":"\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 (\u0432 \u043e\u0434\u043d\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435) views.py class Task1(generics.ListAPIView): queryset = Warrior.objects.all() serializer_class = WarriorProfessionSerializer serializators.py class WarriorProfessionSerializer(serializers.ModelSerializer): profession = serializers.StringRelatedField(read_only=True) class Meta: model = Warrior fields = [\"name\", \"profession\"] urls.py from django.urls import path from .views import * urlpatterns = [ ... path('warriors/list_p/', Task1.as_view()), ... ]","title":"endpoint 2"},{"location":"endpoints/endpoint2/#_1","text":"views.py class Task1(generics.ListAPIView): queryset = Warrior.objects.all() serializer_class = WarriorProfessionSerializer serializators.py class WarriorProfessionSerializer(serializers.ModelSerializer): profession = serializers.StringRelatedField(read_only=True) class Meta: model = Warrior fields = [\"name\", \"profession\"] urls.py from django.urls import path from .views import * urlpatterns = [ ... path('warriors/list_p/', Task1.as_view()), ... ]","title":"\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 (\u0432 \u043e\u0434\u043d\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435)"},{"location":"endpoints/endpoint3/","text":"\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435 (\u043f\u043e id), \u0435\u0433\u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0441\u043a\u0438\u043b\u0430\u0445. views.py class Task3(generics.RetrieveUpdateAPIView): queryset = Warrior.objects.all() serializer_class = WarriorRelatedSerializer serializators.py class WarriorRelatedSerializer(serializers.ModelSerializer): # skill = serializers.SlugRelatedField(read_only=True, many=True, slug_field='title') skill = serializers.StringRelatedField(read_only=True, many=True) profession = serializers.StringRelatedField(read_only=True) class Meta: model = Warrior fields = [\"name\", \"profession\", \"skill\"] urls.py from django.urls import path from .views import * urlpatterns = [ ... path('warriors/<int:pk>/info/', Task3.as_view()), ... ]","title":"endpoint 3"},{"location":"endpoints/endpoint3/#id","text":"views.py class Task3(generics.RetrieveUpdateAPIView): queryset = Warrior.objects.all() serializer_class = WarriorRelatedSerializer serializators.py class WarriorRelatedSerializer(serializers.ModelSerializer): # skill = serializers.SlugRelatedField(read_only=True, many=True, slug_field='title') skill = serializers.StringRelatedField(read_only=True, many=True) profession = serializers.StringRelatedField(read_only=True) class Meta: model = Warrior fields = [\"name\", \"profession\", \"skill\"] urls.py from django.urls import path from .views import * urlpatterns = [ ... path('warriors/<int:pk>/info/', Task3.as_view()), ... ]","title":"\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435 (\u043f\u043e id), \u0435\u0433\u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0441\u043a\u0438\u043b\u0430\u0445."}]}